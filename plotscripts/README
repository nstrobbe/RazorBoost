======================================================================
==     Directory containing all the plot scripts                    ==
==     Please add a description for each script                     ==
======================================================================

******************
** plotTools.py **
******************

This is the script containing all the plotting routines. 
It should not be used directly to plot, but should rather be imported 
in other plotscripts

Currenlty implemented functions: 

SetBoostStyle()
	This will set the style for our plots

ConstructHDict(h,<options>)
	This will construct a dictionary with all the information related to histogram h
	Pass the options as named arguments (option1=value1,option3=value3,...)
	Supported options with the default values:
		name		= "name"
		title		= "title"
		color		= rt.kBlue	# color for line, marker, fill
		appear_in_ratio	= "Yes"		# whether to appear in ratio plot or not
						# Values can be: "Yes", "No", "Ref" (when denominator) 
                linestyle	= 1
		linewidth	= 2
		markerstyle	= 7
		markersize	= 1
		fillstyle	= 0
                xtitle		= ""
		ytitle		= ""

ConstructLDict(xmin,xmax,ymin,ymax,title)
	This will construct a dictionary containing the positional information 
	needed to create a legend, in addition to a possible title for the legend.

PlotDataMC(hdictlist_bg, hdict_data, <options>)
	This routine makes Data/MC comparison plot, and thus needs a list of bg histograms and a data histogram
	The other supported options with their defaults are:
		hdictlist_sig	= 0
		legdict		= 0
               	outputdir	= "plots"
		outfile		= 0
		cname		= "canvas"
		plotinfo	= "Selection X"		# Additional text string to appear on plot
               	ratiotitle	= "ratio"		# Y axis title of the ratio plot
		logscale	= False			# Log scale for Y axis: True or False
		scale		= "No"			# How to scale the histograms ("No", "Yes", "QCD", "Width") 
		scalefactor	= 1			# Additional scalefactor to be applied, usage depends on scale option
		intlumi		= 19.789

	How to use the scale and scalefactor options: 
		"No" 	: No scaling, scalefactor never used
		"Yes" 	: Scale the total background by scalefactor. If scalefactor==1, scale to match data.
		"QCD" 	: Only scale the QCD histogram by scalefactor. If scalefactor==1, scale to match data.
		"Width" : For variable binning, divide by bin width, and multiply by scalefactor


************************
** getDataMCplots2.py **
************************

======================================================================
======================================================================

*************************
** getBGcomposition.py ** 
*************************

Run as: 
	python getBGcomposition.py <samplesfile>
With:
	samplefile: file containing all the samples you want to run over

Things to modify in the script:
	* integrated luminosity, is set to 19789 pb-1 
	* location of the root files with the count histograms

Output of the script:
	* file cutflow.tex containing the cutflow in latex format
	* on screen: cut flow in event counts, percentages and the TTbar composition


***********************
** getDataMCplots.py **
***********************

Run as: 
	python getDataMCplots.py <outputdir>
With:
	outputdir: directory where you want the plots to be stored

Things to modify in the script:
	* integrated luminosity if you want to change this from how you ran the analyzer
	* datasets you want to include. 
	* location of the root files containing the histograms
	* Cut strings if you change those

***********************
** get2Dplots.py **
***********************

Run current version as: 
        python get2Dplots.py <outputdir> <bg histo dir> (<data histo dir>)
With: 
        outputdir: directory where you want the plots to be stored
	bg histo dir: directory containing the rzrBoostMC_bg.root file
	data histo dir: directory containing the rzrBoostMC_data.root file, 
	     	   	can be omitted if it is the same as <bg histo dir>

Things to modify in the script:
       * integrated luminosity if you want to change this from how you ran the analyzer
       * name of the analyzer you ran, default is "rzrBoostMC"
       * name of the outputfile, default is "2Dplots.root"
       * Cut strings if you changed those
       * Specific (extra) plots to make

***********************
** getShapePlots.py **
***********************

Run current version as: 
        python getShapePlots.py <outputdir> <infile1> <infile2> <infile3>
With: 
        outputdir: directory where you want the plots to be stored
	infile1,2,3: three inputfiles currently corresponding to total BG, QCD, TTJets

Things to modify in the script:
       * integrated luminosity if you want to change this from how you ran the analyzer
       * name of the outputfile, default is "shapeplots.root"
       * Specific plots to make

Additional information: 
       * Information about the histogram is passed along to the plot function through a dictionary
         It takes the following form:
	    dict["name"] = [histogram, 
            		    color,
         		    plot title,
                 	    Used as reference plot in ratio?]









